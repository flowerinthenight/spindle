name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  codeberg:
    name: Codeberg
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Mirror to Codeberg
        uses: yesolutions/mirror-action@master
        with:
          REMOTE: "https://codeberg.org/flowerinthenight/spindle.git"
          GIT_USERNAME: flowerinthenight
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}

  build:
    name: Build
    if: "!contains(github.event.commits[0].message, 'ci skip')"
    runs-on: ubuntu-latest

    services:
      emulator:
        image: gcr.io/cloud-spanner-emulator/emulator
        ports:
        - 9010:9010
        - 9020:9020

    steps:
    - name: Setup golang 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test using emulator
      run: |
        curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-400.0.0-linux-x86_64.tar.gz
        tar xvzf google-cloud-sdk-400.0.0-linux-x86_64.tar.gz
        ./google-cloud-sdk/install.sh --quiet
        gcloud config configurations create emulator
        gcloud config set auth/disable_credentials true
        gcloud config set project test-project
        gcloud config set api_endpoint_overrides/spanner http://localhost:9020/
        gcloud spanner instances create test-instance --config=emulator-config --description="Test Instance" --nodes=1
        export SPANNER_EMULATOR_HOST=localhost:9010
        gcloud spanner databases create testdb --instance=test-instance --ddl-file=$PWD/testdata/emuddl.sql
        go test -v ./...
